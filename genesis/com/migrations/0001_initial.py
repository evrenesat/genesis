# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-12-20 17:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lab', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionPricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_included', models.BooleanField(default=False, verbose_name='Tax included')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('list_price', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=8, null=True, verbose_name='List price')),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=8, null=True, verbose_name='Discount percentage')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=8, null=True, verbose_name='Discount amount')),
                ('final_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Customer price')),
                ('admission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='lab.Admission', verbose_name='Admission')),
            ],
            options={
                'verbose_name': 'Admission Pricing',
                'verbose_name_plural': 'Admission Pricings',
            },
        ),
        migrations.CreateModel(
            name='AnalysePricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Exact price')),
                ('discount_rate', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Discount rate')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('analyse_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.AnalyseType', verbose_name='Analyse Type')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lab.Institution', verbose_name='Institution')),
            ],
            options={
                'verbose_name': 'Analyse Pricing',
                'verbose_name_plural': 'Analyse Pricings',
            },
        ),
        migrations.CreateModel(
            name='InstitutePricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Discount rate')),
                ('use_alt_pricing', models.BooleanField(default=False, help_text='Use alternative price', verbose_name='Alt. Pricing')),
                ('open_account', models.BooleanField(default=False, help_text='This institution makes mountly payments', verbose_name='Open account')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('institution', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='lab.Institution', verbose_name='Institution')),
            ],
            options={
                'verbose_name': 'Institue Pricing',
                'verbose_name_plural': 'Institue Pricings',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Name')),
                ('address', models.TextField(blank=True, max_length=250, null=True, verbose_name='Address')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Total')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Discount')),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='SubTotal')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tax amount')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Grand Total')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('admission', models.ManyToManyField(editable=False, to='lab.Admission', verbose_name='Admission')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Item name')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Amount')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('unit', models.CharField(default='Adet', max_length=30, verbose_name='Unit')),
                ('total', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Line total')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('admission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.Admission', verbose_name='Admission')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='com.Invoice', verbose_name='Invoice')),
            ],
            options={
                'verbose_name': 'Invoice Item',
                'verbose_name_plural': 'Invoice Items',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.SmallIntegerField(choices=[(10, 'Sell'), (30, 'Cash'), (40, 'Credit Card'), (50, 'Bank transfer')], default=30, verbose_name='Payment method')),
                ('type', models.SmallIntegerField(choices=[(5, 'Expense (-)'), (10, 'Customer debt (-)'), (20, 'Customer payment (+)')], default=20, verbose_name='Record type')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Amount')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Definition date')),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lab.Admission', verbose_name='Admission')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lab.Institution', verbose_name='Institution')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='lab.Patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Payment Record',
                'verbose_name_plural': 'Payment Records',
            },
        ),
        migrations.AddField(
            model_name='analysepricing',
            name='pricing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='com.InstitutePricing', verbose_name='Institute pricing'),
        ),
        migrations.AlterUniqueTogether(
            name='analysepricing',
            unique_together=set([('institution', 'analyse_type'), ('pricing', 'analyse_type')]),
        ),
    ]
